#define R(t, x, y)                   | fn R(t: f32, mut x: f32, mut y: f32) -> (f32, f32) {
f = x;                               |     let mut f = x;
x -= t * y;                          |     x -= t * y;
y += t * f;                          |     y += t * f;
f = (3 - (x * x) - (y * y)) / 2;     |     f = (3. - (x * x) - (y * y)) / 2.;
x *= f; y *= f;                      |     (x * f, y * f)
                                     | }

fn main() {

    int x, y, o, N;                | let (mut x, mut y, mut o, mut N): (i32, i32, i32, i32);
    float z[7040];                 | let mut z: [f32; 7040];
    float a = 0;                   | let mut a: f32 = 0.;
    float e = 1;                   | let mut e: f32 = 1.;
    float c = 1;                   | let mut c: f32 = 1.;
    float d = 0;                   | let mut d: f32 = 0.;
    float f, g, h, G, H, A, t, D;  | let (mut g, mut h, mut G, mut H, mut A, mut t, mut D): (f32, f32, f32, f32, f32, f32, f32);
    char b[1760];                  | let mut b: [char; 1760];

    loop { | for (;;) {

        memset(b, 32, 1760);                                                               |
        g = 0, h = 1;                                                                      |
        memset(z, 0, 7040);                                                                |
        for (int j = 0; j < 90; j++) {                                                     |
            G = 0, H = 1;                                                                  |
            for (int i = 0; i < 314; i++) {                                                |
                A = h + 2;                                                                 |
                D = 1 / ((G * A * a + g * e) + 5);                                         |
                t = (G * A * e) - (g * a);                                                 |
                x = 40 + (30 * (D * (H * A * d - t * c)));                                 |
                y = 12 + (15 * (D * (H * A * c + t * d)));                                 |
                o = x + (80 * y);                                                          |
                N = 8 * (((g * a - G * h * e) * d) - (G * h * a) - (g * e) - (H * h * c)); |
                if (22 > y && y > 0 && x > 0 && 80 > x && D > z[o]) {                      |
                    z[o] = D;                                                              |
                    b[o] = (N > 0 ? N : 0)[".,-~:;=!*#$@"];                                |
                }                                                                          |
                R(.02, H, G);                                                              |
            }                                                                              |
            R(.07, h, g);                                                                  |
        }                                                                                  |
        for (int k = 0; 1761 > k; k++) {                                                   |
            putchar(k % 80 ? b[k] : 10);                                                   |
        }                                                                                  |
        R(.04, e, a);                                                                      |
        R(.02, d, c);                                                                      |
        usleep(15000);                                                                     |
        printf("\x1b[23A");                                                                |

        z = [0.; 7040];
        (g, h) = (0., 1.);
        b = [' '; 1760];
        for _ in 0..90 {
            (G, H) = (0., 1.);
            for _ in 0..314 {
                A = h + 2.;
                D = 1. / ((G * A * a * g * e) + 5.);
                t = (G * A * e) - (g * a);
                x = (40. + (30. * D * ((H * A * d) - (t * c)))) as i32;
                y = (12. + (15. * D * ((H * A * c) + (t * d)))) as i32;
                o = x + (80 * y);
                N = (8. * ((((g * a) - (G * h * e)) * d) - (G * h * a) - (g * e) - (H * h * c))) as i32;
                if 0 < y && y < 22 && 0 < x && x < 80 && D > z[o as usize] {
                    z[o as usize] = D;
                    b[o as usize] = b".,-~:;=!*#$@"
                        [if N > 0 { N as usize } else { 0 }] as char;
                }
                (H, G) = R(0.02, H, G);
            }
            (h, g) = R(0.07, h, g);
        }
        for k in 0..=1760 {
            print!("{}", if k % 80 != 0 { b[k] } else { '\n' as char });
        }
        (e, a) = R(0.04, e, a);
        (d, c) = R(0.02, d, c);
        std::thread::sleep_ms(15);
        print!("\x1b[23A");
    }
}
